{
  "name": "coa_active_jurisdictions",
  "active": true,
  "depends": [],
  "target": {
    "system": "mda-datastore",
    "resource": "public.coa_active_jurisdictions"
  },
  "type": "canonical",
  "representation": "table",
  "standard-metadata": {
    "title": "Asheville Corporate Limits",
    "publication_date": "2018-07-28",
    "responsible_party": "City of Asheville",
    "url": "See note 1",
    "abstract": "Asheville corporate limits polygon.",
    "status": "ongoing",
    "update-frequency": "daily",
    "keywords": ["gis", "Asheville"],
    "use-constraints": "None",
    "topic-category": ["boundaries"],
    "geographic-extent": "Calculated - see note 2",
    "temporal_extent": "Calculated - see note 2",
    "feature-catalog": "See note 3",
    "process-description": ["This is original information maintained by City staff."],
    "spatial-reference": "SRID: 4326",
    "metadata-creation-date": "8/31/2018 - see note 4",
    "contact-role-code": "See note 5"
  },
  "schema": {
    "type": "sql",
    "dialect": "postresql",
    "file": "coa_active_jurisdictions.sql"
  },
  "etl": {
    "tasks": [
      {
        "type": "fme",
        "file": "edit2wh-coa_active_jurisdictions2.fmw",
        "active": true
      }
    ]
  }
}

## General comments

This version moves ETL jobs into the main JSON file for convenience of presentation. 
For the time being it will remain a separate file (and is a separate table in
the database representation of these assets).

The "schema" field is basically a way to create the table. I'd like to be able
to run a script that reads all the MDA information and generates all the tables
and views in a new database.

## Notes: 

1. "url" above corresponds to "Online Linkage" in the standard. Not sure it
   makes sense to maintain here since it should be generated by the data
   platform, whether the open data portal or SimpliCity.
2. Although I'm listing them here, we would not actually have geographic or
   temporal extents in the mda.json file since they would be computed by the
   data platform.
3. The feature catalog is essentially the table schema. Still figuring out
   exactly how to store/maintain this, but we definitely should have it
   (my guess is that ArgGIS just gets it by querying the table). For one thing,
   I would like to be able to *generate* all the tables automatically based
   on information in this metadata system.
4. Not sure if this should be date the metadata was originally created or
   the date of latest change.
5. Not clear from looking at the standard how this is supposed to be encoded.

